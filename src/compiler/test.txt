.extern print_int
.extern print_bool
.extern read_int
.global main
.type main, @function

.section .text

main:
    pushq %rbp
    movq %rsp, %rbp
    subq $32, %rsp

    # 1. LoadIntConst(3, x)
    movq $3, %rdi  # Use %rdi to pass the argument to the function
    call square

    # Return()
    movq $0, %rax
    movq %rbp, %rsp
    popq %rbp
    ret

square:
    pushq %rbp
    movq %rsp, %rbp
    subq $32, %rsp

    # 3. Use the value in register x (%rdi)
    # No need to explicitly load x, as it's already in %rdi

    # 4. Multiply value at x with itself and store the result in register y (%rax)
    imulq %rdi, %rdi

    # 5. Call print_int with value in register y (%rdi)
    movq %rdi, %rdi  # Move the result to %rdi for the function call
    call print_int

    # Return to main function
    movq $0, %rax
    movq %rbp, %rsp
    popq %rbp
    ret